function createWindow(){mainWindow=new BrowserWindow({width:1280,minWidth:1280,height:860,minHeight:860,webPreferences:{preload:path.join(__dirname,"preload.js"),sandbox:!1}}),mainWindow.loadFile("./assets/pages/home.html"),!app.isPackaged&&mainWindow.webContents.openDevTools()}function ImportBlockModule(e,n=null){compressing.zip.uncompress(e,"./temp").then(()=>{let o=app.isPackaged?"resources/block_modules/modules.json":"./block_modules/modules.json";fs.readFile(o,"utf8",(t,i)=>{let c=JSON.parse(fs.readFileSync("./temp/module.json","utf8")),l=JSON.parse(i),a=!1;for(let e=0;e<l.length;e++){let n=l[e];if(n.name==c.name){a=!0;break}}if(a)n&&n("module exist");else{let t=app.isPackaged?`resources/block_modules/${c.name}`:`./block_modules/${c.name}`;fs.mkdir(t,i=>{compressing.zip.uncompress(e,t).then(()=>{l.push(c),fs.writeFile(o,JSON.stringify(l),e=>{n&&n("")})}).catch(()=>{console.log("解压失败")})})}})}).catch(()=>{console.log("解压失败")})}function OpenBlockModule(){dialog.showOpenDialog(mainWindow,{title:"导入模块",filters:[{name:"Module",extensions:["pbmd"]}],properties:["openFile"]}).then(e=>{e.filePaths.length>0&&ImportBlockModule(e.filePaths[0],e=>{let n="";e?n="模块倒入失败":(mainWindow.webContents.send("load-modules-data"),n="模块倒入成功"),dialog.showMessageBox(mainWindow,{type:"warning",title:"提示",message:n,buttons:["确定"]}).then(e=>{})})}).catch(e=>{console.log(e)})}function UpdateCheck(){let e="https://gitee.com/supercoderlee/pinmashi/releases";https.get(e,e=>{let n="";e.on("data",e=>{n+=e}),e.on("end",()=>{var e=cheerio.load(n),o=e(".tag-name").attr("data-tag-name");console.log(o),"v1.0.0"==o?dialog.showMessageBox(mainWindow,{type:"info",title:"提示",message:`当前 ${o} 为最新版本`,buttons:["确定"]}).then(e=>{}):setTimeout(()=>{dialog.showMessageBox(mainWindow,{type:"info",title:"提示",message:`请更新到最新版本 ${o}`,buttons:["确定"]}).then(e=>{exec("start https://github.com/supercoderlee/pinmashi/releases")})},1e3)})}).on("error",e=>{setTimeout(()=>{dialog.showMessageBox(mainWindow,{type:"info",title:"提示",message:"网络无法连接",buttons:["确定"]}).then(e=>{})},1e3)})}const{app:app,BrowserWindow:BrowserWindow,ipcMain:ipcMain,dialog:dialog,Menu:Menu,MenuItem:MenuItem}=require("electron"),path=require("path"),{spawn:spawn,exec:exec}=require("child_process");let mainWindow;const template=[{label:"文件",submenu:[{label:"新建项目",accelerator:(process.platform,"Ctrl+N"),click:()=>{mainWindow.webContents.send("new-project")}},{label:"打开项目",accelerator:(process.platform,"Ctrl+O"),click:()=>{mainWindow.webContents.send("open-project")}},{label:"保存",accelerator:(process.platform,"Ctrl+S"),click:()=>{mainWindow.webContents.send("save-project")}},{label:"另存为…",accelerator:(process.platform,"Ctrl+Shift+S"),click:()=>{mainWindow.webContents.send("save-project-as")}},{label:"导入模块",accelerator:(process.platform,"Ctrl+Shift+I"),click:()=>{mainWindow.webContents.send("event-relay","import-module"),ipcMain.on("import-module",function(e,n){OpenBlockModule()})}},{label:"重命名项目",accelerator:(process.platform,"Ctrl+R"),click:()=>{mainWindow.webContents.send("rename-project")}},{label:"退出",click:()=>{mainWindow.webContents.send("exit-program")}}]},{label:"设备",submenu:[{label:"连接",accelerator:(process.platform,"Ctrl+Shift+L"),click:()=>{mainWindow.webContents.send("device-connect")}},{label:"断开",accelerator:(process.platform,"Ctrl+Shift+E"),click:()=>{mainWindow.webContents.send("event-relay","conn-end"),ipcMain.on("conn-end",function(e,n){conn.end()})}}]},{label:"运行",submenu:[{label:"本地调试",accelerator:(process.platform,"F5"),click:()=>{mainWindow.webContents.send("run-local")}},{label:"设备调试",accelerator:(process.platform,"F6"),click:()=>{mainWindow.webContents.send("run-device")}},{label:"关闭调试",accelerator:(process.platform,"F7"),click:()=>{mainWindow.webContents.send("event-relay","device-debug-end"),ipcMain.on("device-debug-end",function(e,n){connected.pids&&connected.sftp&&device.DebugEnd(conn)})}},{label:"清除调试控制台",accelerator:"darwin"===process.platform?"Alt+Cmd+C":"Alt+Shift+C",click:()=>{mainWindow.webContents.send("clear-console")}}]},{label:"终端",submenu:[{label:"新建终端",accelerator:(process.platform,"Ctrl+Shift+B"),click:()=>{mainWindow.webContents.send("new-bash")}}]},{label:"帮助",submenu:[{label:"加入交流学习QQ群",click:()=>{dialog.showMessageBox(mainWindow,{type:"info",title:"提示",message:"软件使用交流群、编程学习交流群：647165120",buttons:["确定"]}).then(e=>{})}},{label:"官方Github",click:()=>{exec("start https://github.com/supercoderlee/pinmashi")}},{label:"模块下载",click:()=>{exec("start https://github.com/supercoderlee/pinmashi-resources")}},{label:"检查更新…",click:()=>{UpdateCheck()}},{label:"关于",click:()=>{dialog.showMessageBox(mainWindow,{type:"info",title:"提示",message:"软件版本：1.0.0\n软件版权：本软件版权归作者所有，软件仅供学习使用禁止任何人或组织机构用作商业用途。\n软件简介：本软件是为智能设备编程研发的程序编辑器，采用可视化拖拽式积木编程，有效降低编程难度且能更直观理解程序逻辑。软件主要用在基于Linux操作系统的智能设备远程程序开发和调试。\n另外软件还结合物联网开发实现上位机和下位机的程序开发，实现物联网设备互联互通。",buttons:["确定"]}).then(e=>{})}}]}];Menu.setApplicationMenu(Menu.buildFromTemplate(template)),app.whenReady().then(()=>{createWindow(),app.on("activate",function(){0===BrowserWindow.getAllWindows().length&&createWindow()})}),app.on("window-all-closed",function(){"darwin"!==process.platform&&app.quit(),mainWindow=null});const fs=require("fs"),compressing=require("compressing");ipcMain.on("app-IsPackaged",function(e,n){e.returnValue=app.isPackaged}),ipcMain.on("app-quit",function(e,n){app.quit()}),ipcMain.on("resend-renderer",function(e,n){e.sender.send(n)}),ipcMain.on("app-path",function(e,n){e.returnValue=app.getAppPath()}),ipcMain.on("showOpenDialog",function(e,n){dialog.showOpenDialog(mainWindow,{title:"打开文件",filters:[{name:"pms-project",extensions:["pmsproj"]}],properties:["openFile"]}).then(n=>{n.filePaths.length>0&&e.sender.send("opendialog-callback",n.filePaths[0])}).catch(e=>{console.log(e)})}),ipcMain.on("showSaveDialog",function(e,n){dialog.showSaveDialog(mainWindow,{title:"保存文件",defaultPath:n,filters:[{name:"pms-project",extensions:["pmsproj"]}],properties:["openFile"]}).then(n=>{n.filePath?e.sender.send("savedialog-callback",n.filePath):e.sender.send("savedialog-callback","")}).catch(e=>{console.log(e)})}),ipcMain.on("local-python-run",function(e,n){if("linux"==process.platform||"darwin"==process.platform){spawn("bash",{detached:!0})}else if("win32"==process.platform){let e="cmd /K python ";e+=n.debugCommand?n.debugCommand+" ":"",e+=n.filename+"\n";spawn(e,{shell:!0,detached:!0})}}),ipcMain.on("local-create-shell",function(e,n){if("linux"==process.platform||"darwin"==process.platform);else if("win32"==process.platform){spawn("cmd",{shell:!0,detached:!0})}}),ipcMain.on("open-link",(e,n)=>{exec(`start ${n}`)});const{Client:Client}=require("ssh2"),conn=new Client;connected={host:null,port:null,username:null,password:null,sftp:null,stream:null,pids:[]},conn.on("ready",()=>{console.log("Client :: ready"),mainWindow.webContents.send("device-reply","success"),conn.sftp((e,n)=>{if(e)throw e;connected.sftp=n})}),conn.on("error",e=>{console.log("Connection :: error :: "+e),connected.sftp=null,connected.stream=null,connected.pids=[],conn.end(),mainWindow&&mainWindow.webContents.send("device-reply","error")}),conn.on("end",()=>{console.log("Connection :: end"),connected.sftp=null,connected.stream=null,connected.pids=[],mainWindow&&mainWindow.webContents.send("device-reply","end")}),conn.on("close",e=>{console.log("Connection :: close"),connected.sftp=null,connected.stream=null,connected.pids=[],mainWindow&&mainWindow.webContents.send("device-reply","close")}),ipcMain.on("device-connect",function(e,n){connected.sftp&&conn.end(),conn.connect(n),connected.host=n.host,connected.port=n.port,connected.username=n.username,connected.password=n.password}),ipcMain.on("device-close",function(e,n){conn.end()});const device=require("./addons/device");ipcMain.on("device-python-run",function(e,n){if(connected.sftp){let o=n.filename.split("\\"),t=o[o.length-1],i={};i.userdir=`/home/${connected.username}`,i.exedirname="ev3-block",i.executable=`${i.userdir}/${i.exedirname}/${t}`,connected.sftp.readdir(i.userdir,(o,t)=>{if(o)throw o;let c=!1;for(let e=0;e<t.length;e++){let n=t[e];if(n.filename==i.exedirname&&"d"==n.longname.substring(0,1)){c=!0;break}}c?connected.sftp.fastPut(n.filename,i.executable,o=>{if(o)throw o;device.Debug(conn,e,n.debugCommand,i.executable)}):connected.sftp.mkdir(`${i.userdir}/${i.exedirname}`,o=>{if(o)throw o;connected.sftp.fastPut(n.filename,i.executable,o=>{if(o)throw o;device.Debug(conn,e,n.debugCommand,i.executable)})})})}}),ipcMain.on("device-shell-write",function(e,n){connected.stream&&connected.stream.write(`${n}\n`)}),ipcMain.on("device-shell-close",function(e,n){connected.pids&&connected.sftp&&device.DebugEnd(conn)}),OutputFilter=function(e){return e=e.indexOf("chmod")>-1?"":e,e=e.indexOf("cd")>-1?"":e,e=e.indexOf("Last login")>-1?"":e,e=e.indexOf("###")>-1?"":e,e=e.indexOf(`${connected.username}@`)>-1?"":e,e=e.replace("[?2004l",""),e=e.replace("[?2004h",""),e};const https=require("https"),cheerio=require("cheerio");